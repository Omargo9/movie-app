{"version":3,"sources":["logo.svg","components/Movie.jsx","components/Add.jsx","components/Search.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Card","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","props","movies","map","current","react_default","a","createElement","className","note","src","link","name","Component","Add","style","display","show","type","value","giveName","placeholder","id","onChange","hundleChange","giveLink","giveNote","onClick","addObj","Search","searchMovie","App","_this","hundleAdd","e","setState","defineProperty","target","searchMovies","search","resetInputs","toggleModal","modal","state","addMovie","_this$state","films","toConsumableArray","concat","_this2","components_Add","components_Search","Movie","filter","x","toUpperCase","indexOf","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qIAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,2LCqCzBC,2BAjCX,SAAAA,IAAgB,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAD,GAAAM,KAAAH,6EAKZ,OAAQA,KAAKI,MAAMC,OAAOC,IAAI,SAACC,GAC3B,OAECC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcJ,EAAQK,MAGrCJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYE,IAAKN,EAAQO,OACxCN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcJ,EAAQQ,gBAfpCC,cCmCJC,cApCX,SAAAA,IAAgB,OAAAnB,OAAAC,EAAA,EAAAD,CAAAE,KAAAiB,GAAAnB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAmB,GAAAd,KAAAH,2EAeTI,GACH,OAEEI,EAAAC,EAAAC,cAAA,OACAQ,MAAO,CAAEC,QAASnB,KAAKI,MAAMgB,KAAO,QAAU,QAC9CT,UAAU,SAEZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAENH,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOC,MAAOtB,KAAKI,MAAMmB,SAAUC,YAAY,mBAAmBC,GAAG,OAAOC,SAAU1B,KAAKI,MAAMuB,eAC7GnB,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOC,MAAOtB,KAAKI,MAAMwB,SAAWJ,YAAY,YAAYC,GAAG,OAAOC,SAAU1B,KAAKI,MAAMuB,eACvGnB,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOC,MAAOtB,KAAKI,MAAMyB,SAAUL,YAAY,SAASC,GAAG,OAAOC,SAAU1B,KAAKI,MAAMuB,eAEpGnB,EAAAC,EAAAC,cAAA,UAAQoB,QAAS9B,KAAKI,MAAM2B,QAA5B,gBA7BGf,aCaJgB,cAZX,SAAAA,EAAY5B,GAAO,OAAAN,OAAAC,EAAA,EAAAD,CAAAE,KAAAgC,GAAAlC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAkC,GAAA7B,KAAAH,KACTI,0EAGN,OACII,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACfH,EAAAC,EAAAC,cAAA,SAAOW,KAAK,OAAOG,YAAY,4BAA4BE,SAAU1B,KAAKI,MAAM6B,sBAPtEjB,aCuGPkB,cAhGb,SAAAA,IAAe,IAAAC,EAAA,OAAArC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkC,IACbC,EAAArC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoC,GAAA/B,KAAAH,QAWJoC,UAAU,SAAAC,GAGRF,EAAKG,SAALxC,OAAAyC,EAAA,EAAAzC,CAAA,GACGuC,EAAEG,OAAOf,GAAKY,EAAEG,OAAOlB,SAhBXa,EAqBbM,aAAa,SAACnB,GACba,EAAKG,SAAS,CACZI,OAAOpB,EAAMkB,OAAOlB,SAvBVa,EA4BbQ,YAAc,WACZR,EAAKG,SAAS,CACdvB,KAAK,GACLH,KAAK,GACLE,KAAK,MAhCMqB,EAoCbS,YAAc,WACZT,EAAKG,SAAS,CAAEO,OAAQV,EAAKW,MAAMD,SArCxBV,EAuCbY,SAAW,WAAM,IAAAC,EACWb,EAAKW,MAAzB/B,EADSiC,EACTjC,KAAMH,EADGoC,EACHpC,KAAKE,EADFkC,EACElC,KACjBqB,EAAKG,SAAS,CACZW,MAAMnD,OAAAoD,EAAA,EAAApD,CAAKqC,EAAKW,MAAMG,OAAjBE,OAAA,CAAwB,CAAEpC,OAAMH,OAAKE,YAE5CqB,EAAKS,cACJT,EAAKQ,eA1CVR,EAAKW,MAAQ,CACXG,MAAM,CAAC,CAAClC,KAAK,aAAaH,KAAK,OAAOE,KAAK,6DAA6D,CAACC,KAAK,SAASH,KAAK,MAAME,KAAK,6EACzI4B,OAAO,GACP3B,KAAK,GACLH,KAAK,GACLE,KAAK,GACL+B,OAAM,GATSV,wEAkDN,IAAAiB,EAAApD,KACP,OACEQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACTH,EAAAC,EAAAC,cAAC2C,EAAD,CACNjC,KAAMpB,KAAK8C,MAAMD,MACjBd,OAAQ/B,KAAK+C,SACbpB,aAAc3B,KAAKoC,UACnBb,SAAUvB,KAAK8C,MAAM/B,KACrBa,SAAU5B,KAAK8C,MAAMhC,KACrBe,SAAU7B,KAAK8C,MAAMlC,OAErBJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEfH,EAAAC,EAAAC,cAAC4C,EAAD,CAASrB,YAAajC,KAAKyC,eAC3BjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAChBH,EAAAC,EAAAC,cAAC6C,EAAD,CACIlD,OAAQL,KAAK8C,MAAMG,MAAMO,OACxB,SAAAC,GAAC,OAEE,IADDA,EAAE1C,KAAK2C,cAAcC,QAAQP,EAAKN,MAAMJ,OAAOgB,mBAInDlD,EAAAC,EAAAC,cAAA,UAAQoB,QAAS9B,KAAK4C,aAAtB,OAUFpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBArFHK,aCKE4C,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO1D,EAAAC,EAAAC,cAACyD,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0b92ee0a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\n\r\n\r\nclass Card extends Component {\r\n    constructor () {\r\n        super()\r\n    }\r\n   \r\n    render() { \r\n        return (this.props.movies.map((current)=>{\r\n            return(\r\n                   \r\n             <div className=\"film-card\">\r\n\r\n                <span className=\"movie-note\">{current.note}</span>\r\n                \r\n                \r\n                 <img className=\"movie-pic\" src={current.link}></img>\r\n                 <span className=\"movie-name\">{current.name}</span>\r\n              </div>\r\n              \r\n             ) }\r\n            )\r\n        )\r\n       \r\n          \r\n        }}\r\n    \r\n\r\n\r\n    \r\n        \r\n\r\n\r\n\r\n\r\n \r\nexport default Card;","import React, { Component } from 'react';\r\nclass Add  extends Component {\r\n    constructor () {\r\n        super()\r\n    \r\n\r\n    }\r\n\r\n\r\n\r\n       \r\n\r\n\r\n           \r\n\r\n\r\n      \r\n    render(props) { \r\n        return (\r\n            \r\n          <div\r\n          style={{ display: this.props.show ? \"block\" : \"none\" }}\r\n          className=\"modal\"\r\n        >\r\n        <div className=\"modal-form\">\r\n                 \r\n                 <input type=\"text\" value={this.props.giveName} placeholder=\"Enter films name\" id=\"name\" onChange={this.props.hundleChange}></input>\r\n                 <input type=\"text\" value={this.props.giveLink}  placeholder=\"Enter URL\" id=\"link\" onChange={this.props.hundleChange}></input>\r\n                 <input type=\"text\" value={this.props.giveNote} placeholder=\"Rating\" id=\"note\" onChange={this.props.hundleChange}></input>\r\n\r\n                <button onClick={this.props.addObj}>Add</button>\r\n                </div>\r\n                </div>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Add;","import React, { Component } from 'react';\r\nclass Search  extends Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() { \r\n        return (\r\n            <div className=\"search\">\r\n            <input type=\"text\" placeholder=\"Type movie name to search\" onChange={this.props.searchMovie}></input>\r\n            </div>\r\n          );\r\n    }\r\n}\r\n \r\nexport default Search ;","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Card from './components/Movie';\nimport Add from './components/Add';\nimport Search from './components/Search';\n\nclass App extends Component {\n  constructor () {\n    super()\n\n  this.state = {\n    films:[{name:\"Inspection\",note:\"****\",link:\"https://img.osobnosti.cz/film/1598630-dunkirk/dunkirk.jpg\"},{name:\"Finale\",note:\"***\",link:\"https://img7.cdn.cinoche.com/images/d9950b83aa2b969cecb618157e5aaebf.jpg\"}],\n  search:\"\",\n  name:\"\",\n  note:\"\",\n  link:\"\",\n  modal:false\n  }\n}\nhundleAdd=e=>{\n          \n\n  this.setState({\n    [e.target.id]: e.target.value\n    \n    \n      })\n    }\n    searchMovies=(value)=>{\n     this.setState({\n       search:value.target.value\n     })\n\n     \n    }\n    resetInputs = () => {\n      this.setState({\n      name:\"\",\n      note:\"\",\n      link:\"\",\n    }) \n    };\n\n    toggleModal = () => {\n      this.setState({ modal: !this.state.modal });\n    };\n    addMovie = () => {\n      let { name, note,link } = this.state;\n      this.setState({\n        films: [...this.state.films, { name, note,link }]\n      });\n      this.toggleModal();\n       this.resetInputs();\n\n    };\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n            <Add   \n      show={this.state.modal}\n      addObj={this.addMovie}\n      hundleChange={this.hundleAdd}\n      giveName={this.state.name}\n      giveLink={this.state.link}\n      giveNote={this.state.note}\n      />\n      <div className=\"Border\">\n      \n      <div className=\"Container\">\n      \n      <Search  searchMovie={this.searchMovies}/>\n      <div className=\"cards\">  \n     <Card \n         movies={this.state.films.filter(\n          x =>\n            x.name.toUpperCase().indexOf(this.state.search.toUpperCase()) !==\n            -1\n        )}\n        /> \n        <button onClick={this.toggleModal}>+</button>\n</div>\n      \n\n      \n      \n      \n      \n      \n      </div>\n      <div className=\"Circle\">\n      \n      \n      </div>\n      \n      </div>\n \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}